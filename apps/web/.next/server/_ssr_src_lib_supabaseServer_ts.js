"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_ssr_src_lib_supabaseServer_ts";
exports.ids = ["_ssr_src_lib_supabaseServer_ts"];
exports.modules = {

/***/ "(ssr)/./src/lib/env.ts":
/*!************************!*\
  !*** ./src/lib/env.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   env: () => (/* binding */ env)\n/* harmony export */ });\n/* harmony import */ var _education_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @education/shared */ \"(ssr)/../../packages/shared/src/index.ts\");\n/**\r\n * Environment configuration for Supabase access.\r\n *\r\n * Reads from public NEXT envs when present; falls back to defaults for\r\n * local development and automated tests.\r\n */ \nconst env = (0,_education_shared__WEBPACK_IMPORTED_MODULE_0__.loadServerEnv)();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvbGliL2Vudi50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztDQUtDLEdBQ2lEO0FBRTNDLE1BQU1DLE1BQU1ELGdFQUFhQSxHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4vc3JjL2xpYi9lbnYudHM/ODQ4NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRW52aXJvbm1lbnQgY29uZmlndXJhdGlvbiBmb3IgU3VwYWJhc2UgYWNjZXNzLlxyXG4gKlxyXG4gKiBSZWFkcyBmcm9tIHB1YmxpYyBORVhUIGVudnMgd2hlbiBwcmVzZW50OyBmYWxscyBiYWNrIHRvIGRlZmF1bHRzIGZvclxyXG4gKiBsb2NhbCBkZXZlbG9wbWVudCBhbmQgYXV0b21hdGVkIHRlc3RzLlxyXG4gKi9cclxuaW1wb3J0IHsgbG9hZFNlcnZlckVudiB9IGZyb20gXCJAZWR1Y2F0aW9uL3NoYXJlZFwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGVudiA9IGxvYWRTZXJ2ZXJFbnYoKTtcclxuXHJcblxyXG4iXSwibmFtZXMiOlsibG9hZFNlcnZlckVudiIsImVudiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/env.ts\n");

/***/ }),

/***/ "(ssr)/./src/lib/supabaseServer.ts":
/*!***********************************!*\
  !*** ./src/lib/supabaseServer.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCurrentUser: () => (/* binding */ getCurrentUser),\n/* harmony export */   getCurrentUserInRoute: () => (/* binding */ getCurrentUserInRoute),\n/* harmony export */   getRouteHandlerSupabase: () => (/* binding */ getRouteHandlerSupabase),\n/* harmony export */   getServerComponentSupabase: () => (/* binding */ getServerComponentSupabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/auth-helpers-nextjs */ \"(ssr)/../../node_modules/@supabase/auth-helpers-nextjs/dist/index.js\");\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/env */ \"(ssr)/./src/lib/env.ts\");\n/**\r\n * Supabase server helpers\r\n *\r\n * Centralizes creation of Supabase clients for Server Components and\r\n * Route Handlers, and helpers to obtain the current user. In test mode,\r\n * user identity can be simulated via the `x-test-auth` header/cookie.\r\n */ // Guarded imports to avoid pulling server-only modules into client bundles\n// By keeping this file server-only referenced from server components or route handlers,\n// we still avoid client usage, but Next's bundler sometimes follows transitive imports via\n// client components. Use dynamic require to harden against accidental inclusion.\nlet cookies;\nlet headers;\ntry {\n    const nh = __webpack_require__(/*! next/headers */ \"(ssr)/../../node_modules/next/dist/api/headers.js\");\n    cookies = nh.cookies;\n    headers = nh.headers;\n} catch  {\n// No-op in non-server contexts; functions below should not be called client-side\n}\n\n\n/** Create a Supabase client for use in Server Components. */ function getServerComponentSupabase() {\n    const supabaseUrl = _lib_env__WEBPACK_IMPORTED_MODULE_1__.env.NEXT_PUBLIC_SUPABASE_URL;\n    const supabaseKey = _lib_env__WEBPACK_IMPORTED_MODULE_1__.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n    return (0,_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__.createServerComponentClient)({\n        cookies\n    }, {\n        supabaseUrl,\n        supabaseKey\n    });\n}\n/** Create a Supabase client for use in Route Handlers. */ function getRouteHandlerSupabase() {\n    const supabaseUrl = _lib_env__WEBPACK_IMPORTED_MODULE_1__.env.NEXT_PUBLIC_SUPABASE_URL;\n    const supabaseKey = _lib_env__WEBPACK_IMPORTED_MODULE_1__.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n    return (0,_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__.createRouteHandlerClient)({\n        cookies\n    }, {\n        supabaseUrl,\n        supabaseKey\n    });\n}\n/**\r\n * Get the current authenticated user in a Server Component context.\r\n * In test mode, returns a simulated user based on `x-test-auth`.\r\n */ async function getCurrentUser() {\n    const cookieStore = cookies();\n    const testAuth = cookieStore.get(\"x-test-auth\")?.value ?? headers().get(\"x-test-auth\") ?? undefined;\n    if (testAuth === \"teacher\" || testAuth === \"student\" || testAuth === \"parent\" || testAuth === \"admin\") {\n        const email = `${testAuth}@example.com`;\n        // Align with tests that expect deterministic ids like 'test-student-id'\n        const roleToId = {\n            teacher: \"test-teacher-id\",\n            student: \"test-student-id\",\n            parent: \"test-parent-id\",\n            admin: \"test-admin-id\"\n        };\n        const id = roleToId[testAuth];\n        return {\n            id,\n            email,\n            user_metadata: {\n                role: testAuth\n            }\n        };\n    }\n    const supabase = getServerComponentSupabase();\n    const { data } = await supabase.auth.getUser();\n    return data.user;\n}\n/**\r\n * Get the current authenticated user in a Route Handler context.\r\n * In test mode, returns a simulated user based on `x-test-auth`.\r\n */ async function getCurrentUserInRoute(req) {\n    const cookieStore = cookies();\n    const hdrs = req?.headers ?? headers();\n    const testAuth = cookieStore.get(\"x-test-auth\")?.value ?? hdrs.get(\"x-test-auth\") ?? undefined;\n    if (testAuth === \"teacher\" || testAuth === \"student\" || testAuth === \"parent\" || testAuth === \"admin\") {\n        const email = `${testAuth}@example.com`;\n        const roleToId = {\n            teacher: \"test-teacher-id\",\n            student: \"test-student-id\",\n            parent: \"test-parent-id\",\n            admin: \"test-admin-id\"\n        };\n        const id = roleToId[testAuth];\n        return {\n            id,\n            email,\n            user_metadata: {\n                role: testAuth\n            }\n        };\n    }\n    const supabase = getRouteHandlerSupabase();\n    const { data } = await supabase.auth.getUser();\n    return data.user;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/supabaseServer.ts\n");

/***/ })

};
;